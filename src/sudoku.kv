#:import c constants
#:import s settings
#:import dp kivy.metrics.dp

<SudokuGrid@GridLayout>:
    cols: 9
    rows: 9
    padding: '2dp'
    spacing: '1dp'
    canvas.after:
        Color:
            rgba: c.BLACK

        # outer box
        Line:
            width: dp(2)
            rectangle: (self.x + 3, self.y + 3, self.width - 6, self.height - 5)

        # thinner inner lines
        Line:
            width: dp(1)
            points: self.x + self.width * 1/9 + 0.7, self.y + dp(4), self.x + self.width * 1/9 + 0.7, self.top - dp(4) + 1
        Line:
            width: dp(1)
            points: self.x + self.width * 2/9 + 0.7, self.y + dp(4), self.x + self.width * 2/9 + 0.7, self.top - dp(4) + 1
        Line:
            width: dp(1)
            points: self.x + self.width * 4/9 + 0.7, self.y + dp(4), self.x + self.width * 4/9 + 0.7, self.top - dp(4) + 1
        Line:
            width: dp(1)
            points: self.x + self.width * 5/9 + 0.7, self.y + dp(4), self.x + self.width * 5/9 + 0.7, self.top - dp(4) + 1
        Line:
            width: dp(1)
            points: self.x + self.width * 7/9 + 0.7, self.y + dp(4), self.x + self.width * 7/9 + 0.7, self.top - dp(4) + 1
        Line:
            width: dp(1)
            points: self.x + self.width * 8/9 + 0.7, self.y + dp(4), self.x + self.width * 8/9 + 0.7, self.top - dp(4) + 1
        Line:
            width: dp(1)
            points: self.x + dp(4), self.y + self.height * 1/9 + 0.7, self.right - dp(4), self.y + self.height * 1/9 + 0.7
        Line:
            width: dp(1)
            points: self.x + dp(4), self.y + self.height * 2/9 + 0.7, self.right - dp(4), self.y + self.height * 2/9 + 0.7
        Line:
            width: dp(1)
            points: self.x + dp(4), self.y + self.height * 4/9 + 0.7, self.right - dp(4), self.y + self.height * 4/9 + 0.7
        Line:
            width: dp(1)
            points: self.x + dp(4), self.y + self.height * 5/9 + 0.7, self.right - dp(4), self.y + self.height * 5/9 + 0.7
        Line:
            width: dp(1)
            points: self.x + dp(4), self.y + self.height * 7/9 + 0.7, self.right - dp(4), self.y + self.height * 7/9 + 0.7
        Line:
            width: dp(1)
            points: self.x + dp(4), self.y + self.height * 8/9 + 0.7, self.right - dp(4), self.y + self.height * 8/9 + 0.7

        # thicker inner lines (every 3/9 = 1/3 and 6/9 = 2/3)
        Line:
            width: dp(2)
            points: self.x + self.width * 1/3 + 0.7, self.y + dp(4), self.x + self.width * 1/3 + 0.7, self.top - dp(4) + 1
        Line:
            width: dp(2)
            points: self.x + self.width * 2/3 - 0.7, self.y + dp(4), self.x + self.width * 2/3 - 0.7, self.top - dp(4) + 1
        Line:
            width: dp(2)
            points: self.x + dp(4), self.y + self.height * 1/3 + 0.7, self.right - dp(4), self.y + self.height * 1/3 + 0.7
        Line:
            width: dp(2)
            points: self.x + dp(4), self.y + self.height * 2/3 - 0.7, self.right - dp(4), self.y + self.height * 2/3 - 0.7

        # outer box
        Line:
            width: dp(2)
            rectangle: (self.x + 3, self.y + 3, self.width - 6, self.height - 5)

<SudokuCell@Button>:
    font_size: s.WINDOW_SIZE[1] // 24
    background_normal: ''
    background_color: c.WHITE
    color: c.BLACK

<NumberButton@Button>:
    font_size: s.WINDOW_SIZE[1] // 36
    background_normal: ''
    background_color: (0, 0, 0, 0)
    color: c.BLUE
    canvas.before:
        Color:
            rgba: c.DEFAULT_N if self.state == 'normal' else c.SELECTED
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [dp(10)]

<ActionButton@Button>:
    font_size: '16sp'
    background_normal: ''
    background_color: (0, 0, 0, 0)
    color: c.BLACK
    canvas.before:
        Color:
            rgba: (0, 0, 0, 0) if self.state == 'normal' else c.SELECTED
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [dp(8)]

<TopNavButton@Button>:
    font_size: '16sp'
    background_normal: ''
    background_color: (0,0,0,0)
    color: c.BLACK
    size_hint: None, None
    size: dp(40), dp(40)
    canvas.before:
        Color:
            rgba: (0, 0, 0, 0) if self.state == 'normal' else c.SELECTED
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [dp(10)]

<GameScreen@Screen>:
    FloatLayout:
        # --- Top Nav Bar ---
        BoxLayout:
            id: top_nav_bar
            orientation: 'horizontal'
            size_hint: 0.9, None
            height: '48dp'
            pos_hint: {'center_x': 0.5, 'top': 0.98}

            TopNavButton:
                on_release: app.quit()
                Image:
                    source: 'assets/back_arrow.png'
                    center: self.parent.center
                    size: self.parent.size[1] * 0.9, self.parent.size[1] * 0.9
                    allow_stretch: True
                    color: c.BLACK

            # TopNavButton:
                # text: "S"
                # on_release: app.open_settings()

        # --- Difficulty label ---
        Label:
            id: difficulty_label
            text: "hello"
            font_size: s.WINDOW_SIZE[1] // 60
            color: c.BLACK
            size_hint: None, None
            size: self.texture_size
            pos_hint: {'x': 0.053, 'top': 0.875}

        # --- Sudoku Grid ---
        SudokuGrid:
            id: sudoku_grid
            size_hint: 0.9, 0.5
            pos_hint: {'center_x': 0.5, 'top': 0.85}

        # --- Action Bar ---
        FloatLayout:
            id: action_bar
            height: '40dp'
            spacing: '60dp'

            ActionButton:
                id: pencil_button
                pos_hint: {'center_x': 0.3, 'center_y': 0.26}
                size_hint: 0.1, 0.05625
                on_release: app.toggle_pencil_mode()
                Image:
                    source: 'assets/pencil.png'
                    center: self.parent.center
                    size: s.WINDOW_SIZE[1] // 24, s.WINDOW_SIZE[1] // 24
                    allow_stretch: True
                    color: c.BLACK

            ActionButton:
                id: auto_pencil
                pos_hint: {'center_x': 0.5, 'center_y': 0.26}
                size_hint: 0.1, 0.05625
                on_release: app.auto_pencil()
                Image:
                    source: 'assets/auto_pencil.png'
                    center: self.parent.center
                    size: s.WINDOW_SIZE[1] // 18, s.WINDOW_SIZE[1] // 18
                    allow_stretch: True
                    color: c.BLACK

            ActionButton:
                pos_hint: {'center_x': 0.7, 'center_y': 0.26}
                size_hint: 0.1, 0.05625
                on_release: app.reset()
                Image:
                    source: 'assets/reset.png'
                    center: self.parent.center
                    size: s.WINDOW_SIZE[1] // 18, s.WINDOW_SIZE[1] // 18
                    allow_stretch: True
                    color: c.BLACK

        # --- Number Palette ---
        BoxLayout:
            id: number_palette
            orientation: 'horizontal'
            size_hint: 0.9, None
            height: '48dp'
            pos_hint: {'center_x': 0.5, 'y': 0.1}
            spacing: '5dp'

<WinPopup@Popup>:
    title: ''
    auto_dismiss: False
    size_hint: 0.5, 0.5

    BoxLayout:
        orientation: 'vertical'
        spacing: '10dp'
        padding: '10dp'

        Label:
            text: 'You Won!'
            font_size: '24sp'

        Label:
            text: ''
            font_size: '24sp'

        Button:
            text: 'Play Again'
            on_release:
                root.dismiss()
                app.game_start()

        Button:
            text: 'Exit'
            on_release:
                root.dismiss() 
                app.quit()

<MenuScreen@Screen>:
    BoxLayout:
        orientation: 'vertical'
        spacing: '10dp'
        padding: '50dp'

        Label:
            text: "Sudoku"
            font_size: '48sp'
            color: c.BLACK
            size_hint_y: None
            height: root.height * 1.2

        BoxLayout:
            orientation: 'horizontal'
            spacing: '10dp'
            size_hint_y: None
            height: '48dp'

            Button:
                text: "Easy"
                on_release: 
                    app.root.current = 'game'
                    app.game_start('easy')

            Button:
                text: "Medium"
                on_release: 
                    app.root.current = 'game'
                    app.game_start('medium')

            Button:
                text: "Hard"
                on_release: 
                    app.root.current = 'game'
                    app.game_start('hard')

            Button:
                text: "Exit"
                on_release: app.stop()

ScreenManager:
    MenuScreen:
        name: 'menu'
    GameScreen:
        name: 'game'